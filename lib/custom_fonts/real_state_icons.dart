/// Flutter icons RealState
/// Copyright (C) 2023 by original authors @ fluttericon.com, fontello.com
/// This font was generated by FlutterIcon.com, which is derived from Fontello.
///
/// To use this font, place it in your fonts/ directory and include the
/// following in your pubspec.yaml
///
/// flutter:
///   fonts:
///    - family:  RealState
///      fonts:
///       - asset: fonts/RealState.ttf
///
/// 
/// * Material Design Icons, Copyright (C) Google, Inc
///         Author:    Google
///         License:   Apache 2.0 (https://www.apache.org/licenses/LICENSE-2.0)
///         Homepage:  https://design.google.com/icons/
/// * Font Awesome 4, Copyright (C) 2016 by Dave Gandy
///         Author:    Dave Gandy
///         License:   SIL ()
///         Homepage:  http://fortawesome.github.com/Font-Awesome/
/// * Entypo, Copyright (C) 2012 by Daniel Bruce
///         Author:    Daniel Bruce
///         License:   SIL (http://scripts.sil.org/OFL)
///         Homepage:  http://www.entypo.com
/// * Linearicons Free, Copyright (C) Linearicons.com
///         Author:    Perxis
///         License:   CC BY-SA 4.0 (https://creativecommons.org/licenses/by-sa/4.0/)
///         Homepage:  https://linearicons.com
///
import 'package:flutter/widgets.dart';

class RealState {
  RealState._();

  static const _kFontFam = 'RealState';
  static const String? _kFontPkg = null;

  static const IconData expand_less = IconData(0xe800, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData expand_more = IconData(0xe801, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData keyboard_arrow_left = IconData(0xe802, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData keyboard_arrow_right = IconData(0xe803, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData down_open = IconData(0xe804, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData left_open = IconData(0xe805, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData right_open = IconData(0xe806, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData up_open = IconData(0xe807, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData check = IconData(0xe808, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData leftarrow = IconData(0xe809, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData letter_unread = IconData(0xe80a, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData location = IconData(0xe80b, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData next = IconData(0xe80c, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData pending = IconData(0xe80d, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData phone_calling_rounded = IconData(0xe80e, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData plot = IconData(0xe80f, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData postid = IconData(0xe810, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData previouspost = IconData(0xe811, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData profile = IconData(0xe812, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData rentpropert = IconData(0xe813, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData right_arrow = IconData(0xe814, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData right_arrow_filled = IconData(0xe815, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData saleproperty = IconData(0xe816, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData sqft = IconData(0xe817, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData support = IconData(0xe818, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData takeonrent = IconData(0xe819, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData user_rounded = IconData(0xe81a, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData alartbell = IconData(0xe81b, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData eye = IconData(0xe81c, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData facing = IconData(0xe81d, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData filter = IconData(0xe81e, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData garden = IconData(0xe81f, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData home = IconData(0xe820, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData info = IconData(0xe821, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData down_arrow = IconData(0xe822, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData done2 = IconData(0xe823, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData delete = IconData(0xe824, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData done = IconData(0xe825, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData dateprevious = IconData(0xe826, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData cross = IconData(0xe827, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData corner = IconData(0xe828, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData calendar_date = IconData(0xe829, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData user = IconData(0xe82a, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData envelope = IconData(0xe82b, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData buyproperty = IconData(0xe82c, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData calendar_full = IconData(0xe836, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData calendar_minus_o = IconData(0xf272, fontFamily: _kFontFam, fontPackage: _kFontPkg);
}
